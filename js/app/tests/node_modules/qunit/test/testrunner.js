var a = require('assert'),
    chainer = require('chainer'),
    _ = require('underscore');

var tr = require('../lib/testrunner'),
    log = require('../lib/log'),
    generators = require('../lib/generators');

var fixtures = __dirname + '/fixtures',
    chain = chainer();

tr.options.log = {
    // log assertions overview
    // assertions: true,
    // log expected and actual values for failed tests
    // errors: true,
    // log tests overview
    // tests: true,
    // log summary
    // summary: true,
    // log global summary (all files)
    // globalSummary: true,
    // log coverage
    // coverage: true,
    // log global coverage (all files)
    // globalCoverage: true,
    // log currently testing code file
    testing: true
};

// reset log stats every time .next is called
chain.next = function() {
    log.reset();
    return chainer.prototype.next.apply(this, arguments);
};

chain.add('base testrunner', function() {
    tr.run({
        code: '../../../../helper/jqe.js',
        tests: 'fixtures/jqe-test.js',
    }, function(err, res) {
        var stat = {
            files: 1,
            tests: 4,
            assertions: 7,
            failed: 2,
            passed: 5
        };
        a.equal(err, null, 'no errors');
        a.ok(res.runtime > 0, 'Date was modified');
        delete res.runtime;
        delete res.coverage;
        a.deepEqual(stat, res, 'base testrunner test');
        chain.next();
    });
});

chain.add(function() {
    console.log('\nAll tests ok.');
});

chain.start();
